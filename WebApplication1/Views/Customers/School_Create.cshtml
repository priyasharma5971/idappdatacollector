
@{
    ViewBag.Title = "School_Create";
    Layout = "~/Views/Shared/Customer.cshtml";
}

@model WebApplication1.School




<br /><br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

      <div class="form-horizontal">
          <h4>Add School</h4>
          <hr />
          @Html.ValidationSummary(true, "", new { @class = "text-danger" })
          <div class="form-group">
              @Html.LabelFor(model => model.SchoolName, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.SchoolName, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Address3, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Address3, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Address3, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  <input type="file" class="upload up1 " name="LogoUpload" id="LogoUpload" accept="image/jpeg, image/jpg" />

              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.SchoolCode, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.SchoolCode, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.SchoolCode, "", new { @class = "text-danger" })
              </div>
          </div>

          <div class="form-group">
              @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  <div class="checkbox">
                      @Html.EditorFor(model => model.IsActive)
                      @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                  </div>
              </div>
          </div>
          <div class="form-group">
              @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                  @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control",@type="password" } })
                  @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
              </div>
          </div>

          @*<div class="form-group">
            @Html.LabelFor(model => model.UpdatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

          <div class="form-group">
              Customer Name
              <div class="col-md-10">
                  @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
              </div>
          </div>
          <br />

          <div class="form-group">
              <div class="col-md-offset-2 col-md-10">
                  <input type="submit" value="Add" class="btn btn-primary" />
              </div>
          </div>
      </div>
}

<div>
    <a href="~/Customers/School_Index">Back</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


